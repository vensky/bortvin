/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  min-width: 280px;
  margin: 0;
  background-color: #fff;
  color: #000;
  font: 400 18px "Open Sans", "Segoe UI", roboto, "Helvetica Neue", helvetica, arial, sans-serif;
}

.btn {
  display: inline-block;
  border: 1px solid #ff891e;
  background-color: #ff891e;
  color: #fff;
  font-size: 13px;
  padding: 9px 24px;
  border-radius: 3px;
  text-decoration: none;
  text-transform: uppercase;
  text-align: center;
}
@media (min-width: 1171px) {
  .btn {
    font-size: 16px;
  }
}
.btn--transparent {
  border: 1px solid #000;
  color: #000;
  background-color: transparent;
}

.slider {
  height: 100vh;
}
.slider__wrapper {
  position: relative;
  overflow: hidden;
  height: 100%;
}
.slider__slides {
  position: relative;
  height: 100%;
  padding: 0;
  margin: 0;
  list-style: none;
}
.slider__slide {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  -webkit-transition: opacity 0.25s ease;
  -o-transition: opacity 0.25s ease;
  transition: opacity 0.25s ease;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  padding: 30px 10px 45px;
}
@media (min-width: 769px) {
  .slider__slide {
    padding-left: 90px;
    padding-right: 90px;
  }
}
.slider__slide--shown {
  z-index: 2;
  opacity: 1;
}
.slider__img {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
.slider__img img {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.slider__container {
  position: relative;
  text-align: center;
  margin: auto;
  max-width: 345px;
}
@media (min-width: 769px) {
  .slider__container {
    text-align: left;
    max-width: 942px;
    margin: auto 0;
  }
}
@media (min-width: 1171px) {
  .slider__container {
    max-width: 1200px;
  }
}
.slider__title {
  font-size: 25px;
  font-weight: 400;
  line-height: 1.16;
  margin-top: 0;
  margin-bottom: 7px;
  max-height: 120px;
  overflow: scroll;
}
@media (min-width: 769px) {
  .slider__title {
    max-height: none;
    overflow: visible;
    max-width: 486px;
    font-size: 35px;
    margin-bottom: 12px;
  }
}
@media (min-width: 1171px) {
  .slider__title {
    max-width: 653px;
    font-size: 42px;
    margin-bottom: 14px;
  }
}
.slider__subtitle {
  font-size: 18px;
  margin-top: 0;
  margin-bottom: 28px;
  max-height: 50px;
  overflow: scroll;
}
@media (min-width: 769px) {
  .slider__subtitle {
    display: none;
    font-size: 22px;
    margin-bottom: 17px;
    max-width: 486px;
    overflow: visible;
  }
}
@media (min-width: 1171px) {
  .slider__subtitle {
    max-width: 653px;
    font-size: 26px;
    margin-bottom: 22px;
  }
}
.slider__subtitle--md {
  display: none;
}
@media (min-width: 769px) {
  .slider__subtitle--md {
    display: block;
  }
}
@media (min-width: 769px) {
  .slider__actions {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    /*justify-content: start;*/
  }
}
.slider__more {
  margin: 0 auto;
  max-width: 128px;
}
@media (min-width: 769px) {
  .slider__more {
    margin: 0 22px 0 0;
  }
}
@media (min-width: 1171px) {
  .slider__more {
    margin: 0 26px 0 0;
    max-width: 156px;
  }
}
.slider__all {
  display: none;
  margin-right: 20px;
  max-width: 128px;
}
@media (min-width: 769px) {
  .slider__all {
    display: inline-block;
  }
}
@media (min-width: 1171px) {
  .slider__all {
    max-width: 156px;
  }
}
.slider__btn {
  position: absolute;
  border-radius: 2px;
  z-index: 3;
  top: 50%;
  width: 78px;
  height: 85px;
  border: 0;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  cursor: pointer;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  display: none;
}
@media (min-width: 769px) {
  .slider__btn {
    display: block;
  }
}
.slider__btn::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  height: 18px;
  width: 15px;
  margin-top: -7px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: auto 100%;
  background-image: url("../img/icon-arrow.svg");
  -webkit-transition: -webkit-transform 0.25s ease;
  transition: -webkit-transform 0.25s ease;
  -o-transition: transform 0.25s ease;
  transition: transform 0.25s ease;
  transition: transform 0.25s ease, -webkit-transform 0.25s ease;
}
.slider__btn--prev {
  left: 0;
}
.slider__btn--prev:hover::before {
  -webkit-transform: rotate(180deg) translateX(5px);
      -ms-transform: rotate(180deg) translateX(5px);
          transform: rotate(180deg) translateX(5px);
}
.slider__btn--prev::before {
  margin-left: -14px;
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}
.slider__btn--next {
  right: 0;
}
.slider__btn--next:hover::before {
  -webkit-transform: translateX(5px);
      -ms-transform: translateX(5px);
          transform: translateX(5px);
}
.slider__pagination {
  position: absolute;
  z-index: 3;
  bottom: 27px;
  left: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 0;
  margin: 0;
  list-style: none;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.slider__pagination-item {
  width: 14px;
  height: 14px;
  border: 1px solid #000;
  margin: 0 8px;
  background-color: transparent;
  border-radius: 50%;
  cursor: pointer;
  font-size: 0;
  color: #fff;
}
@media (min-width: 769px) {
  .slider__pagination-item {
    border-radius: 2px;
    width: 25%;
    max-width: 224px;
    min-height: 55px;
    height: auto;
    background-color: rgba(0, 0, 0, 0.15);
    border: none;
    font-size: 9px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 5px;
    line-height: 1.2;
  }
}
@media (min-width: 1171px) {
  .slider__pagination-item {
    font-size: 11px;
    max-width: 278px;
    min-height: 68px;
    padding: 6px;
  }
}
.slider__pagination-item--current {
  background-color: #000;
}
@media (min-width: 769px) {
  .slider__pagination-item--current {
    background-color: rgba(0, 0, 0, 0.5);
  }
}
.slider__pagination-preview {
  display: none;
  border-radius: 2px;
  height: 45px;
  width: 40px;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  overflow: hidden;
  margin-right: 10px;
}
@media (min-width: 769px) {
  .slider__pagination-preview {
    display: block;
  }
}
@media (min-width: 1171px) {
  .slider__pagination-preview {
    width: 49px;
    height: 53px;
  }
}
.slider__pagination-preview img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.slider__pagination-text {
  display: none;
}
@media (min-width: 769px) {
  .slider__pagination-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
.slider__pagination-text p {
  margin-top: 0;
  margin-bottom: 2px;
}
.slider__pagination-text h3 {
  font-size: 10px;
  font-weight: 600;
  margin: 0;
}
@media (min-width: 1171px) {
  .slider__pagination-text h3 {
    font-size: 12px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */